setwd("~/Desktop/GitHub/NFLPlayPredictionProject/R")
library(tidyverse)
library(cowplot)
library(nflplotR)
data <- read.csv("/Users/garrett/Desktop/games_pbp.csv")
view(data)
#str(data)
library(tidyverse)
library(lubridate)
data <- read.csv("/Users/garrett/Desktop/GitHub/NFLPlayPredictionProject/raw-data/nfl_games_pbp.csv")
data <- data %>%
mutate(num = as.integer(gsub("\\D", "", yards_to_endzone)) ) %>%
mutate(abbr = gsub("\\W", "", yards_to_endzone) ) %>%
mutate(abbr = gsub("\\d", "", abbr) )
data <- data %>%
mutate(abbr = str_replace( abbr, "ARZ", "ARI" ) ) %>%
mutate(abbr = str_replace( abbr, "CLV", "CLE" ) ) %>%
mutate(abbr = str_replace( abbr, "BLT", "BAL" ) ) %>%
mutate(abbr = str_replace( abbr, "HST", "HOU" ) ) %>%
mutate(Abbreviation = str_replace( Abbreviation, "LAR", "LA" ) )
data <- data %>%
mutate( yards_to_endzone = ifelse(abbr == Abbreviation, 100 - num, num ) )
data <- data %>%
select( -c('num', 'abbr') ) %>%
rename( possession_abbr = Abbreviation )
data <- data %>%
select( c('game', 'possession_team', 'possession_abbr', 'quarter',
'time', 'shotgun', 'down', 'yards_to_first', 'yards_to_endzone', 'run_pass' ) )
data <- data %>%
mutate( quarter = as.factor(quarter) ) %>%
mutate( shotgun = as.factor(shotgun) ) %>%
mutate( down = as.factor(down) ) %>%
mutate( yards_to_endzone = as.integer(yards_to_endzone) ) %>%
mutate( run_pass = as.factor(run_pass) )
data <- data %>%
mutate( time = ifelse(substr(time, 1, 1) == ":", paste0("0", time), time) )
games_pbp <- data
usethis::use_data(MaxTemp)
usethis::use_data(games_pbp)
library(NFLPlayPredictionProject)
library(tidyverse)
library(cowplot)
library(nflplotR)
data <- read.csv("/Users/garrett/Desktop/GitHub/NFLPlayPredictionProject/raw-data/games_pbp.csv")
view(data)
#str(data)
data <- data %>%
select( -c('X'))
data1 <- data %>%
group_by(game) %>%
summarise(count= n()) %>%
filter(grepl('bears_at_vikings_2022_reg_5', game))
d <- data %>%
group_by(possession_abbr, run_pass) %>%
summarise(count=n())
team_colors <- nflreadr::load_teams()
team_colors <- team_colors %>%
select( c("team_abbr", "team_color") )
d <- inner_join(d, team_colors, by= c("possession_abbr"="team_abbr"))
data_pass <- data %>%
group_by(possession_abbr) %>%
filter(run_pass == "pass") %>%
summarise(pass_count= n())
data_run <- data %>%
group_by(possession_abbr) %>%
filter(run_pass == "run") %>%
summarise(run_count= n())
run_pass_df <- inner_join(data_pass, data_run, by="possession_abbr")
run_pass_df <- run_pass_df %>%
mutate(num_pass_per_game = as.double(round(pass_count/16, 2) )) %>%
mutate(num_run_per_game = as.double(round(run_count/16, 2) ) )
d <- d %>%
mutate(bar_color = ifelse(run_pass == "run", team_color, "grey"))
stack <- ggplot(d, aes(x = possession_abbr, y = count,
fill = forcats::fct_rev(bar_color))) +
geom_col(position = "fill") +
scale_fill_identity(guide = "none") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Proportion of Pass and Run Plays for Each Team",
subtitle = "(2022 Season)", x = "", y = "Proportion of Plays",
fill = "Run or Pass") +
theme_bw() +
theme(plot.title = element_text(face="bold", size=16),
plot.subtitle = element_text(face="bold"),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x = element_text(color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank() ) +
theme(axis.text.x = element_text( angle = 32 ) ) +
annotate( "label", x=28, y=.8, label = "Top: Passes \n Bottom: Runs" )
stack
dot <- ggplot( run_pass_df, aes(x=num_run_per_game, y=num_pass_per_game) ) +
geom_point(stat = "identity", size=.5, alpha = .001 ) +
geom_hline(yintercept = mean(run_pass_df$num_pass_per_game), color = "red", linetype = "dashed", alpha=0.8) +
geom_vline(xintercept =  mean(run_pass_df$num_run_per_game), color = "red", linetype = "dashed", alpha=0.8) +
geom_nfl_logos(aes(team_abbr = possession_abbr), width = .08, alpha = 0.75)+
labs(title = "Every Team's Average Number of Passes and Runs per Game",
subtitle = "(2022 Season)", x= "Average Number of Runs",
y= "Average Number of Passes") +
theme_bw() +
theme(plot.title = element_text(face="bold", size=16),
plot.subtitle = element_text(face="bold"),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank() )
dot
stack <- ggplot(d, aes(x = possession_abbr, y = count,
fill = forcats::fct_rev(bar_color))) +
geom_col(position = "fill") +
scale_fill_identity(guide = "none") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Proportion of Pass and Run Plays for Each Team",
subtitle = "(2022 Season)", x = "", y = "Proportion of Plays",
fill = "Run or Pass") +
theme_bw() +
theme(plot.title = element_text(face="bold", size=16),
plot.subtitle = element_text(face="bold"),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x = element_text(color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank() ) +
theme(axis.text.x = element_text( angle = 32 ) ) +
annotate( "label", x=28, y=.8, label = "Top: Passes \n Bottom: Runs" )
stack
stack <- ggplot(d, aes(x = possession_abbr, y = count,
fill = forcats::fct_rev(bar_color))) +
geom_col(position = "fill") +
scale_fill_identity(guide = "none") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Proportion of Pass and Run Plays for Each Team",
subtitle = "(2022 Season)", x = "", y = "Proportion of Plays",
fill = "Run or Pass") +
theme_bw() +
theme(plot.title = element_text(face="bold", size=16),
plot.subtitle = element_text(face="bold"),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x = element_text(color = "black", face = "bold"),
axis.text.y = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank() ) +
theme(axis.text.x = element_text( angle = 32 ) ) +
annotate( "label", x=28, y=.8, label = "Top: Passes \n Bottom: Runs" )
stack
scatter <- ggplot( run_pass_df, aes(x=num_run_per_game, y=num_pass_per_game) ) +
geom_point(stat = "identity", size=.5, alpha = .001 ) +
geom_hline(yintercept = mean(run_pass_df$num_pass_per_game), color = "red", linetype = "dashed", alpha=0.8) +
geom_vline(xintercept =  mean(run_pass_df$num_run_per_game), color = "red", linetype = "dashed", alpha=0.8) +
geom_nfl_logos(aes(team_abbr = possession_abbr), width = .08, alpha = 0.75)+
labs(title = "Every Team's Average Number of Passes and Runs per Game",
subtitle = "(2022 Season)", x= "Average Number of Runs",
y= "Average Number of Passes") +
theme_bw() +
theme(plot.title = element_text(face="bold", size=16),
plot.subtitle = element_text(face="bold"),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank() )
scatter
scatter <- ggplot( run_pass_df, aes(x=num_run_per_game, y=num_pass_per_game) ) +
geom_point(stat = "identity", size=.5, alpha = .001 ) +
geom_hline(yintercept = mean(run_pass_df$num_pass_per_game), color = "red", linetype = "dashed", alpha=0.8) +
geom_vline(xintercept =  mean(run_pass_df$num_run_per_game), color = "red", linetype = "dashed", alpha=0.8) +
geom_nfl_logos(aes(team_abbr = possession_abbr), width = .08, alpha = 0.75)+
labs(title = "Every Team's Average Number of Passes and Runs per Game",
subtitle = "(2022 Season)", x= "Average Number of Runs",
y= "Average Number of Passes") +
theme_bw() +
theme(plot.title = element_text(face="bold", size=16),
plot.subtitle = element_text(face="bold"),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank() )
scatter
